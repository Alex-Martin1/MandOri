\name{mandibular_metrics}
\alias{mandibular_metrics}
\title{
Calculate linear distances in mm from a given set of three-dimensional points
}
\description{
Calculates linear distances (in millimetres) from anatomical landmarks that are used for size standardization or comparative analyses in mandibular morphology.
Unlike \code{distR}, this function assumes a predefined ordering and number of landmarks based on the standard protocol available at protocols.io, requiring a matrix of 18 rows and 3 columns as input.
}
\usage{
mandibular_metrics(result_matrix)
}
\arguments{
  \item{result_matrix}{
A numeric matrix with 18 rows and 3 columns, where each row contains the X, Y, and Z coordinates of a specific landmark or derived point. 
This matrix can be generated using the sequential application of the functions \code{getmatrix()}, \code{mirror_LM1()}, and \code{orthoplanes()}.
}
}
\details{
This function is part of the standard measurement pipeline described in the accompanying the standard protocol (protocols.io). 
The input must be a 3D coordinate matrix (i.e., three columns corresponding to X, Y, Z). 
Although similar to \code{distR}, this function is intended for use with a specific point configuration generated by the standard protocol. 
The inclusion of both \code{mandibular_metrics} and \code{distR} in the package reflects the need to accommodate different workflows.
}
\value{
A data frame (1 row, 5 columns) containing the following measurements, in millimetres:
 \itemize{
   \item{Mandibular lateral length}
   \item{Corpus length}
   \item{Estimated dental arch breadth}
   \item{Estimated dental arch length}
   \item{Estimated bigonial breadth}
}
These measurements are useful for downstream size standardization and morphometric comparisons.
For further details on the measurements and the reason for their calculation, see references below.
}
\references{
Protocols.io - to be published
}
\author{
Alejandro Martín-Sánchez
}
\note{
As a low-level user of R, while I grasp the logic of the language and handle its fundamental principles, I have turned to AI to generate the code for the entire package in order to save hours of work. A seasoned developer or even someone proficient in the field may have easily noticed this, as the code may not be as efficient as it could be. For this reason, any suggestions on how to improve it are more than welcome :)
}
\examples{
require(MandOri)
text <- "-3.176e+01 -7.557e+00 -1.441e+02 -1.478e+00 6.264e+00 -1.046e+02 -5.153e-02 -2.313e+01 -9.379e+01 -5.700e-01 -1.662e+01 -1.083e+02 -2.924e+01 -5.551e+00 -1.335e+02 -2.191e+01 -5.099e+00 -1.348e+02 -2.557e+01 -1.035e+00 -1.221e+02 -1.980e+01 -6.242e-01 -1.243e+02 -4.616e+01 -3.496e+01 -1.652e+02 -1.790e+01 2.789e+00 -1.106e+02 -4.694e+01 1.235e+01 -2.013e+02"
result_matrix <- getmatrix(text)
mirror_LM1(result_matrix)
orthoplanes(result_matrix)
mandibular_metrics(result_matrix)
}
